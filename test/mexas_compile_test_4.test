// MEXAS Compile Test 4 Input
//
// File:        mexas_compile_test_4.mex
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Jan  3 06:07:46 AM EST 2025
//
// The authors have placed this program in the public
// domain; they make no warranty and accept no liability
// for this program.

// TEST ALL THE ARITHMETIC INSTRUCIONS
//
PUSHI 101
    [13:0;1] PUSHI T_PUSH 0 0 0 101; *
NEG
    [14:1;1] NEG T_AOP 0 0 0; *
ABS
    [15:2;1] ABS T_AOP 0 0 0; *
POP
    [16:3;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 100
    [18:4;1] PUSHI T_PUSH 0 0 0 100; *
PUSHI 10
    [19:5;2] PUSHI T_PUSH 0 0 0 10; *
ADD
    [20:6;1] ADD T_AOP 0 0 0; *
PUSHI 10
    [21:7;2] PUSHI T_PUSH 0 0 0 10; *
SUB
    [22:8;1] SUB T_AOP 0 0 0; *
POP
    [23:9;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 100
    [25:10;1] PUSHI T_PUSH 0 0 0 100; *
ADDI 10
    [26:11;1] ADDI T_AOP 0 0 0 10; *
SUBI 10
    [27:12;1] SUBI T_AOP 0 0 0 10; *
POP
    [28:13;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 10
    [30:14;1] PUSHI T_PUSH 0 0 0 10; *
PUSHI 110
    [31:15;2] PUSHI T_PUSH 0 0 0 110; *
SUBR
    [32:16;1] SUBR T_AOP 0 0 0; *
POP
    [33:17;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 10
    [34:18;1] PUSHI T_PUSH 0 0 0 10; *
SUBRI 110
    [35:19;1] SUBRI T_AOP 0 0 0 110; *
POP
    [36:20;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 123
    [38:21;1] PUSHI T_PUSH 0 0 0 123; *
PUSHI 5
    [39:22;2] PUSHI T_PUSH 0 0 0 5; *
MUL
    [40:23;1] MUL T_AOP 0 0 0; *
PUSHI 5
    [41:24;2] PUSHI T_PUSH 0 0 0 5; *
DIV
    [42:25;1] DIV T_AOP 0 0 0; *
MULI 5
    [43:26;1] MULI T_AOP 0 0 0 5; *
DIVI 5
    [44:27;1] DIVI T_AOP 0 0 0 5; *
MULI 5
    [45:28;1] MULI T_AOP 0 0 0 5; *
SUBI 1
    [46:29;1] SUBI T_AOP 0 0 0 1; *
DIVI 5
    [47:30;1] DIVI T_AOP 0 0 0 5; *
POP
    [48:31;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 5
    [50:32;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI 5
    [51:33;2] PUSHI T_PUSH 0 0 0 5; *
PUSHI 123
    [52:34;3] PUSHI T_PUSH 0 0 0 123; *
MUL
    [53:35;2] MUL T_AOP 0 0 0; *
DIVR
    [54:36;1] DIVR T_AOP 0 0 0; *
POP
    [55:37;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 5
    [56:38;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI 615
    [57:39;2] PUSHI T_PUSH 0 0 0 615; *
DIVR
    [58:40;1] DIVR T_AOP 0 0 0; *
POP
    [59:41;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 5
    [60:42;1] PUSHI T_PUSH 0 0 0 5; *
DIVRI 615
    [61:43;1] DIVRI T_AOP 0 0 0 615; *
POP
    [62:44;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 4.567
    [64:45;1] PUSHI T_PUSH 0 0 0 4.567; *
PUSHI 1
    [65:46;2] PUSHI T_PUSH 0 0 0 1; *
MOD
    [66:47;1] MOD T_AOP 0 0 0; *
MULI 1000
    [67:48;1] MULI T_AOP 0 0 0 1000; *
ADDI 4000
    [68:49;1] ADDI T_AOP 0 0 0 4000; *
MODI 1000
    [69:50;1] MODI T_AOP 0 0 0 1000; *
POP
    [70:51;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 1
    [71:52;1] PUSHI T_PUSH 0 0 0 1; *
MODRI 4.567
    [72:53;1] MODRI T_AOP 0 0 0 4.567; *
POP
    [73:54;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 1000
    [74:55;1] PUSHI T_PUSH 0 0 0 1000; *
PUSHI 4567
    [75:56;2] PUSHI T_PUSH 0 0 0 4567; *
MODR
    [76:57;1] MODR T_AOP 0 0 0; *
POP
    [77:58;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 5
    [79:59;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI 2
    [80:60;2] PUSHI T_PUSH 0 0 0 2; *
MOD
    [81:61;1] MOD T_AOP 0 0 0; *
POP
    [82:62;0] POPS T_POP 0 0 0; [< * * >]
PUSHI -5
    [83:63;1] PUSHI T_PUSH 0 0 0 -5; *
PUSHI 2
    [84:64;2] PUSHI T_PUSH 0 0 0 2; *
MOD
    [85:65;1] MOD T_AOP 0 0 0; *
POP
    [86:66;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 5
    [87:67;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI -2
    [88:68;2] PUSHI T_PUSH 0 0 0 -2; *
MOD
    [89:69;1] MOD T_AOP 0 0 0; *
POP
    [90:70;0] POPS T_POP 0 0 0; [< * * >]
PUSHI -5
    [91:71;1] PUSHI T_PUSH 0 0 0 -5; *
PUSHI -2
    [92:72;2] PUSHI T_PUSH 0 0 0 -2; *
MOD
    [93:73;1] MOD T_AOP 0 0 0; *
POP
    [94:74;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 2
    [96:75;1] PUSHI T_PUSH 0 0 0 2; *
PUSHI 10
    [97:76;2] PUSHI T_PUSH 0 0 0 10; *
POW
    [98:77;1] POW T_AOP 0 0 0; *
POWI 0.1
    [99:78;1] POWI T_AOP 0 0 0 0.1; *
POP
    [100:79;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 3
    [101:80;1] PUSHI T_PUSH 0 0 0 3; *
POWRI 5
    [102:81;1] POWRI T_AOP 0 0 0 5; *
POP
    [103:82;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 0.5
    [104:83;1] PUSHI T_PUSH 0 0 0 0.5; *
PUSHI 100
    [105:84;2] PUSHI T_PUSH 0 0 0 100; *
POWR
    [106:85;1] POWR T_AOP 0 0 0; *
POP
    [107:86;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 2
    [108:87;1] PUSHI T_PUSH 0 0 0 2; *
PUSHI 0.5
    [109:88;2] PUSHI T_PUSH 0 0 0 0.5; *
POW
    [110:89;1] POW T_AOP 0 0 0; *
POP
    [111:90;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [113:91;1] PUSHI T_PUSH 0 0 0 1; *
PUSHI 10
    [114:92;2] PUSHI T_PUSH 0 0 0 10; *
LSH
    [115:93;1] LSH T_AOP 0 0 0; *
RSHI 10
    [116:94;1] RSHI T_AOP 0 0 0 10; *
POP
    [117:95;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 1024
    [118:96;1] PUSHI T_PUSH 0 0 0 1024; *
PUSHI 10
    [119:97;2] PUSHI T_PUSH 0 0 0 10; *
RSH
    [120:98;1] RSH T_AOP 0 0 0; *
LSHI 10
    [121:99;1] LSHI T_AOP 0 0 0 10; *
POP
    [122:100;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [124:101;1] PUSHI T_PUSH 0 0 0 1.5; *
FLOOR
    [125:102;1] FLOOR T_AOP 0 0 0; *
CEIL
    [126:103;1] CEIL T_AOP 0 0 0; *
ADDI 0.1
    [127:104;1] ADDI T_AOP 0 0 0 0.1; *
CEIL
    [128:105;1] CEIL T_AOP 0 0 0; *
FLOOR
    [129:106;1] FLOOR T_AOP 0 0 0; *
POP
    [130:107;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [132:108;1] PUSHI T_PUSH 0 0 0 1.5; *
TRUNC
    [133:109;1] TRUNC T_AOP 0 0 0; *
ROUND
    [134:110;1] ROUND T_AOP 0 0 0; *
PUSHI 2.5
    [135:111;2] PUSHI T_PUSH 0 0 0 2.5; *
TRUNC
    [136:112;2] TRUNC T_AOP 0 0 0; *
ROUND
    [137:113;2] ROUND T_AOP 0 0 0; *
PUSHI -1.5
    [138:114;3] PUSHI T_PUSH 0 0 0 -1.5; *
TRUNC
    [139:115;3] TRUNC T_AOP 0 0 0; *
ROUND
    [140:116;3] ROUND T_AOP 0 0 0; *
PUSHI -2.5
    [141:117;4] PUSHI T_PUSH 0 0 0 -2.5; *
TRUNC
    [142:118;4] TRUNC T_AOP 0 0 0; *
ROUND
    [143:119;4] ROUND T_AOP 0 0 0; *
POP
    [144:120;3] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [146:121;4] PUSHI T_PUSH 0 0 0 1.5; *
ROUND
    [147:122;4] ROUND T_AOP 0 0 0; *
TRUNC
    [148:123;4] TRUNC T_AOP 0 0 0; *
PUSHI 2.5
    [149:124;5] PUSHI T_PUSH 0 0 0 2.5; *
ROUND
    [150:125;5] ROUND T_AOP 0 0 0; *
TRUNC
    [151:126;5] TRUNC T_AOP 0 0 0; *
PUSHI -1.5
    [152:127;6] PUSHI T_PUSH 0 0 0 -1.5; *
ROUND
    [153:128;6] ROUND T_AOP 0 0 0; *
TRUNC
    [154:129;6] TRUNC T_AOP 0 0 0; *
PUSHI -2.5
    [155:130;7] PUSHI T_PUSH 0 0 0 -2.5; *
ROUND
    [156:131;7] ROUND T_AOP 0 0 0; *
TRUNC
    [157:132;7] TRUNC T_AOP 0 0 0; *
POP
    [158:133;6] POPS T_POP 0 0 0; [< * * >]

PUSHI 1234
    [160:134;7] PUSHI T_PUSH 0 0 0 1234; *
LOG
    [161:135;7] LOG T_AOP 0 0 0; *
EXP
    [162:136;7] EXP T_AOP 0 0 0; *
LOG10
    [163:137;7] LOG10 T_AOP 0 0 0; *
EXP10
    [164:138;7] EXP10 T_AOP 0 0 0; *
POP
    [165:139;6] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [167:140;7] PUSHI T_PUSH 0 0 0 1; *
ASIN DEG90
    [168:141;7] ASIN T_AOP 0 0 0; DEG90
PUSH DEG90
    [169:142;8] PUSHS T_PUSH 0 0 0; [< DEG90 * >]
SIN
    [170:143;8] SIN T_AOP 0 0 0; *
PUSH DEG90
    [171:144;9] PUSHS T_PUSH 1 0 0; [< DEG90 * >]
COS
    [172:145;9] COS T_AOP 0 0 0; *
PUSH DEG90
    [173:146;10] PUSHS T_PUSH 2 0 0; [< DEG90 * >]
TAN
    [174:147;10] TAN T_AOP 0 0 0; *
POP
    [175:148;9] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [177:149;10] PUSHI T_PUSH 0 0 0 1; *
ATAN DEG45
    [178:150;10] ATAN T_AOP 0 0 0; DEG45
PUSH DEG45
    [179:151;11] PUSHS T_PUSH 0 0 0; [< DEG45 * >]
SIN
    [180:152;11] SIN T_AOP 0 0 0; *
PUSH DEG45
    [181:153;12] PUSHS T_PUSH 1 0 0; [< DEG45 * >]
COS
    [182:154;12] COS T_AOP 0 0 0; *
PUSH DEG45
    [183:155;13] PUSHS T_PUSH 2 0 0; [< DEG45 * >]
TAN
    [184:156;13] TAN T_AOP 0 0 0; *
POP
    [185:157;12] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [187:158;13] PUSHI T_PUSH 0 0 0 1; *
ACOS DEG0
    [188:159;13] ACOS T_AOP 0 0 0; DEG0
PUSH DEG0
    [189:160;14] PUSHS T_PUSH 0 0 0; [< DEG0 * >]
SIN
    [190:161;14] SIN T_AOP 0 0 0; *
PUSH DEG0
    [191:162;15] PUSHS T_PUSH 1 0 0; [< DEG0 * >]
COS
    [192:163;15] COS T_AOP 0 0 0; *
PUSH DEG0
    [193:164;16] PUSHS T_PUSH 2 0 0; [< DEG0 * >]
TAN
    [194:165;16] TAN T_AOP 0 0 0; *
POP
    [195:166;15] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [197:167;16] PUSHI T_PUSH 0 0 0 1; *
PUSHI 1
    [198:168;17] PUSHI T_PUSH 0 0 0 1; *
ATAN2
    [199:169;16] ATAN2 T_AOP 0 0 0; *
POP
    [200:170;15] POPS T_POP 0 0 0; [< * * >]
PUSHI 10
    [201:171;16] PUSHI T_PUSH 0 0 0 10; *
PUSHI -10
    [202:172;17] PUSHI T_PUSH 0 0 0 -10; *
ATAN2
    [203:173;16] ATAN2 T_AOP 0 0 0; *
POP
    [204:174;15] POPS T_POP 0 0 0; [< * * >]
PUSHI -10
    [205:175;16] PUSHI T_PUSH 0 0 0 -10; *
PUSHI 10
    [206:176;17] PUSHI T_PUSH 0 0 0 10; *
ATAN2R
    [207:177;16] ATAN2R T_AOP 0 0 0; *
POP
    [208:178;15] POPS T_POP 0 0 0; [< * * >]
* {13:0,1,1} PUSHI: * <= 101
* {14:1,1,2} NEG: * = -101 <= - 101
* {15:2,1,3} ABS: * = 101 <= abs -101
* {16:3,0,4} POPS: * <= * = 101
* {18:4,1,5} PUSHI: * <= 100
* {19:5,2,6} PUSHI: * <= 10
* {20:6,1,7} ADD: * = 110 <= 100 + 10
* {21:7,2,8} PUSHI: * <= 10
* {22:8,1,9} SUB: * = 100 <= 110 - 10
* {23:9,0,10} POPS: * <= * = 100
* {25:10,1,11} PUSHI: * <= 100
* {26:11,1,12} ADDI: * = 110 <= 100 + 10
* {27:12,1,13} SUBI: * = 100 <= 110 - 10
* {28:13,0,14} POPS: * <= * = 100
* {30:14,1,15} PUSHI: * <= 10
* {31:15,2,16} PUSHI: * <= 110
* {32:16,1,17} SUBR: * = 100 <= 110 - 10
* {33:17,0,18} POPS: * <= * = 100
* {34:18,1,19} PUSHI: * <= 10
* {35:19,1,20} SUBRI: * = 100 <= 110 - 10
* {36:20,0,21} POPS: * <= * = 100
* {38:21,1,22} PUSHI: * <= 123
* {39:22,2,23} PUSHI: * <= 5
* {40:23,1,24} MUL: * = 615 <= 123 * 5
* {41:24,2,25} PUSHI: * <= 5
* {42:25,1,26} DIV: * = 123 <= 615 / 5
* {43:26,1,27} MULI: * = 615 <= 123 * 5
* {44:27,1,28} DIVI: * = 123 <= 615 / 5
* {45:28,1,29} MULI: * = 615 <= 123 * 5
* {46:29,1,30} SUBI: * = 614 <= 615 - 1
* {47:30,1,31} DIVI: * = 122.8 <= 614 / 5
* {48:31,0,32} POPS: * <= * = 122.8
* {50:32,1,33} PUSHI: * <= 5
* {51:33,2,34} PUSHI: * <= 5
* {52:34,3,35} PUSHI: * <= 123
* {53:35,2,36} MUL: * = 615 <= 5 * 123
* {54:36,1,37} DIVR: * = 123 <= 615 / 5
* {55:37,0,38} POPS: * <= * = 123
* {56:38,1,39} PUSHI: * <= 5
* {57:39,2,40} PUSHI: * <= 615
* {58:40,1,41} DIVR: * = 123 <= 615 / 5
* {59:41,0,42} POPS: * <= * = 123
* {60:42,1,43} PUSHI: * <= 5
* {61:43,1,44} DIVRI: * = 123 <= 615 / 5
* {62:44,0,45} POPS: * <= * = 123
* {64:45,1,46} PUSHI: * <= 4.567
* {65:46,2,47} PUSHI: * <= 1
* {66:47,1,48} MOD: * = 0.567 <= 4.567 fmod 1
* {67:48,1,49} MULI: * = 567 <= 0.567 * 1000
* {68:49,1,50} ADDI: * = 4567 <= 567 + 4000
* {69:50,1,51} MODI: * = 567 <= 4567 fmod 1000
* {70:51,0,52} POPS: * <= * = 567
* {71:52,1,53} PUSHI: * <= 1
* {72:53,1,54} MODRI: * = 0.567 <= 4.567 fmod 1
* {73:54,0,55} POPS: * <= * = 0.567
* {74:55,1,56} PUSHI: * <= 1000
* {75:56,2,57} PUSHI: * <= 4567
* {76:57,1,58} MODR: * = 567 <= 4567 fmod 1000
* {77:58,0,59} POPS: * <= * = 567
* {79:59,1,60} PUSHI: * <= 5
* {80:60,2,61} PUSHI: * <= 2
* {81:61,1,62} MOD: * = 1 <= 5 fmod 2
* {82:62,0,63} POPS: * <= * = 1
* {83:63,1,64} PUSHI: * <= -5
* {84:64,2,65} PUSHI: * <= 2
* {85:65,1,66} MOD: * = 1 <= -5 fmod 2
* {86:66,0,67} POPS: * <= * = 1
* {87:67,1,68} PUSHI: * <= 5
* {88:68,2,69} PUSHI: * <= -2
* {89:69,1,70} MOD: * = -1 <= 5 fmod -2
* {90:70,0,71} POPS: * <= * = -1
* {91:71,1,72} PUSHI: * <= -5
* {92:72,2,73} PUSHI: * <= -2
* {93:73,1,74} MOD: * = -1 <= -5 fmod -2
* {94:74,0,75} POPS: * <= * = -1
* {96:75,1,76} PUSHI: * <= 2
* {97:76,2,77} PUSHI: * <= 10
* {98:77,1,78} POW: * = 1024 <= 2 pow 10
* {99:78,1,79} POWI: * = 2 <= 1024 pow 0.1
* {100:79,0,80} POPS: * <= * = 2
* {101:80,1,81} PUSHI: * <= 3
* {102:81,1,82} POWRI: * = 125 <= 5 pow 3
* {103:82,0,83} POPS: * <= * = 125
* {104:83,1,84} PUSHI: * <= 0.5
* {105:84,2,85} PUSHI: * <= 100
* {106:85,1,86} POWR: * = 10 <= 100 pow 0.5
* {107:86,0,87} POPS: * <= * = 10
* {108:87,1,88} PUSHI: * <= 2
* {109:88,2,89} PUSHI: * <= 0.5
* {110:89,1,90} POW: * = 1.4142135623731 <= 2 pow 0.5
* {111:90,0,91} POPS: * <= * = 1.4142135623731
* {113:91,1,92} PUSHI: * <= 1
* {114:92,2,93} PUSHI: * <= 10
* {115:93,1,94} LSH: * = 1024 <= 1 << 10
* {116:94,1,95} RSHI: * = 1 <= 1024 >> 10
* {117:95,0,96} POPS: * <= * = 1
* {118:96,1,97} PUSHI: * <= 1024
* {119:97,2,98} PUSHI: * <= 10
* {120:98,1,99} RSH: * = 1 <= 1024 >> 10
* {121:99,1,100} LSHI: * = 1024 <= 1 << 10
* {122:100,0,101} POPS: * <= * = 1024
* {124:101,1,102} PUSHI: * <= 1.5
* {125:102,1,103} FLOOR: * = 1 <= floor 1.5
* {126:103,1,104} CEIL: * = 1 <= ceil 1
* {127:104,1,105} ADDI: * = 1.1 <= 1 + 0.1
* {128:105,1,106} CEIL: * = 2 <= ceil 1.1
* {129:106,1,107} FLOOR: * = 2 <= floor 2
* {130:107,0,108} POPS: * <= * = 2
* {132:108,1,109} PUSHI: * <= 1.5
* {133:109,1,110} TRUNC: * = 1 <= trunc 1.5
* {134:110,1,111} ROUND: * = 1 <= round 1
* {135:111,2,112} PUSHI: * <= 2.5
* {136:112,2,113} TRUNC: * = 2 <= trunc 2.5
* {137:113,2,114} ROUND: * = 2 <= round 2
* {138:114,3,115} PUSHI: * <= -1.5
* {139:115,3,116} TRUNC: * = -1 <= trunc -1.5
* {140:116,3,117} ROUND: * = -1 <= round -1
* {141:117,4,118} PUSHI: * <= -2.5
* {142:118,4,119} TRUNC: * = -2 <= trunc -2.5
* {143:119,4,120} ROUND: * = -2 <= round -2
* {144:120,3,121} POPS: * <= * = -2
* {146:121,4,122} PUSHI: * <= 1.5
* {147:122,4,123} ROUND: * = 2 <= round 1.5
* {148:123,4,124} TRUNC: * = 2 <= trunc 2
* {149:124,5,125} PUSHI: * <= 2.5
* {150:125,5,126} ROUND: * = 2 <= round 2.5
* {151:126,5,127} TRUNC: * = 2 <= trunc 2
* {152:127,6,128} PUSHI: * <= -1.5
* {153:128,6,129} ROUND: * = -2 <= round -1.5
* {154:129,6,130} TRUNC: * = -2 <= trunc -2
* {155:130,7,131} PUSHI: * <= -2.5
* {156:131,7,132} ROUND: * = -2 <= round -2.5
* {157:132,7,133} TRUNC: * = -2 <= trunc -2
* {158:133,6,134} POPS: * <= * = -2
* {160:134,7,135} PUSHI: * <= 1234
* {161:135,7,136} LOG: * = 7.11801620446533 <= log 1234
* {162:136,7,137} EXP: * = 1234 <= exp 7.11801620446533
* {163:137,7,138} LOG10: * = 3.09131515969722 <= log10 1234
* {164:138,7,139} EXP10: * = 1234 <= exp10 3.09131515969722
* {165:139,6,140} POPS: * <= * = 1234
* {167:140,7,141} PUSHI: * <= 1
* {168:141,7,142} ASIN: DEG90 = 1.5707963267949 <= asin 1
* {169:142,8,143} PUSHS: * <= DEG90 = 1.5707963267949
* {170:143,8,144} SIN: * = 1 <= sin 1.5707963267949
* {171:144,9,145} PUSHS: * <= DEG90 = 1.5707963267949
* {172:145,9,146} COS: * = 6.12323399573677e-17 <= cos 1.5707963267949
* {173:146,10,147} PUSHS: * <= DEG90 = 1.5707963267949
* {174:147,10,148} TAN: * = 1.63312393531954e+16 <= tan 1.5707963267949
* {175:148,9,149} POPS: * <= * = 1.63312393531954e+16
* {177:149,10,150} PUSHI: * <= 1
* {178:150,10,151} ATAN: DEG45 = 0.785398163397448 <= atan 1
* {179:151,11,152} PUSHS: * <= DEG45 = 0.785398163397448
* {180:152,11,153} SIN: * = 0.707106781186547 <= sin 0.785398163397448
* {181:153,12,154} PUSHS: * <= DEG45 = 0.785398163397448
* {182:154,12,155} COS: * = 0.707106781186548 <= cos 0.785398163397448
* {183:155,13,156} PUSHS: * <= DEG45 = 0.785398163397448
* {184:156,13,157} TAN: * = 1 <= tan 0.785398163397448
* {185:157,12,158} POPS: * <= * = 1
* {187:158,13,159} PUSHI: * <= 1
* {188:159,13,160} ACOS: DEG0 = 0 <= acos 1
* {189:160,14,161} PUSHS: * <= DEG0 = 0
* {190:161,14,162} SIN: * = 0 <= sin 0
* {191:162,15,163} PUSHS: * <= DEG0 = 0
* {192:163,15,164} COS: * = 1 <= cos 0
* {193:164,16,165} PUSHS: * <= DEG0 = 0
* {194:165,16,166} TAN: * = 0 <= tan 0
* {195:166,15,167} POPS: * <= * = 0
* {197:167,16,168} PUSHI: * <= 1
* {198:168,17,169} PUSHI: * <= 1
* {199:169,16,170} ATAN2: * = 0.785398163397448 <= 1 atan2 1
* {200:170,15,171} POPS: * <= * = 0.785398163397448
* {201:171,16,172} PUSHI: * <= 10
* {202:172,17,173} PUSHI: * <= -10
* {203:173,16,174} ATAN2: * = 2.35619449019234 <= 10 atan2 -10
* {204:174,15,175} POPS: * <= * = 2.35619449019234
* {205:175,16,176} PUSHI: * <= -10
* {206:176,17,177} PUSHI: * <= 10
* {207:177,16,178} ATAN2R: * = 2.35619449019234 <= 10 atan2 -10
* {208:178,15,179} POPS: * <= * = 2.35619449019234
mexas_compile_test_4.mex successfully compiled
