// MEXAS Compile Test 4 Input
//
// File:        mexas_compile_test_4.mex
// Author:      Bob Walton (walton@acm.org)
// Date:        Sun Aug 13 17:31:55 EDT 2023
//
// The authors have placed this program in the public
// domain; they make no warranty and accept no liability
// for this program.

// TEST ALL THE ARITHMETIC INSTRUCIONS
//
PUSHI 101
    [13:0;1] PUSHI T_PUSH 0 0 0 101; *
NEG
    [14:1;1] NEG T_AOP 0 0 0; *
ABS
    [15:2;1] ABS T_AOP 0 0 0; *
POP
    [16:3;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 100
    [18:4;1] PUSHI T_PUSH 0 0 0 100; *
PUSHI 10
    [19:5;2] PUSHI T_PUSH 0 0 0 10; *
ADD
    [20:6;1] ADD T_AOP 0 0 0; *
PUSHI 10
    [21:7;2] PUSHI T_PUSH 0 0 0 10; *
SUB
    [22:8;1] SUB T_AOP 0 0 0; *
POP
    [23:9;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 100
    [25:10;1] PUSHI T_PUSH 0 0 0 100; *
ADDI 10
    [26:11;1] ADDI T_AOP 0 0 0 10; *
SUBI 10
    [27:12;1] SUBI T_AOP 0 0 0 10; *
POP
    [28:13;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 10
    [30:14;1] PUSHI T_PUSH 0 0 0 10; *
PUSHI 110
    [31:15;2] PUSHI T_PUSH 0 0 0 110; *
SUBR
    [32:16;1] SUBR T_AOP 0 0 0; *
POP
    [33:17;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 10
    [34:18;1] PUSHI T_PUSH 0 0 0 10; *
SUBRI 110
    [35:19;1] SUBRI T_AOP 0 0 0 110; *
POP
    [36:20;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 123
    [38:21;1] PUSHI T_PUSH 0 0 0 123; *
PUSHI 5
    [39:22;2] PUSHI T_PUSH 0 0 0 5; *
MUL
    [40:23;1] MUL T_AOP 0 0 0; *
PUSHI 5
    [41:24;2] PUSHI T_PUSH 0 0 0 5; *
DIV
    [42:25;1] DIV T_AOP 0 0 0; *
MULI 5
    [43:26;1] MULI T_AOP 0 0 0 5; *
DIVI 5
    [44:27;1] DIVI T_AOP 0 0 0 5; *
MULI 5
    [45:28;1] MULI T_AOP 0 0 0 5; *
SUBI 1
    [46:29;1] SUBI T_AOP 0 0 0 1; *
DIVI 5
    [47:30;1] DIVI T_AOP 0 0 0 5; *
POP
    [48:31;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 5
    [50:32;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI 5
    [51:33;2] PUSHI T_PUSH 0 0 0 5; *
PUSHI 123
    [52:34;3] PUSHI T_PUSH 0 0 0 123; *
MUL
    [53:35;2] MUL T_AOP 0 0 0; *
DIVR
    [54:36;1] DIVR T_AOP 0 0 0; *
POP
    [55:37;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 5
    [56:38;1] PUSHI T_PUSH 0 0 0 5; *
PUSHI 615
    [57:39;2] PUSHI T_PUSH 0 0 0 615; *
DIVR
    [58:40;1] DIVR T_AOP 0 0 0; *
POP
    [59:41;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 5
    [60:42;1] PUSHI T_PUSH 0 0 0 5; *
DIVRI 615
    [61:43;1] DIVRI T_AOP 0 0 0 615; *
POP
    [62:44;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 4.567
    [64:45;1] PUSHI T_PUSH 0 0 0 4.567; *
PUSHI 1
    [65:46;2] PUSHI T_PUSH 0 0 0 1; *
MOD
    [66:47;1] MOD T_AOP 0 0 0; *
MULI 1000
    [67:48;1] MULI T_AOP 0 0 0 1000; *
ADDI 4000
    [68:49;1] ADDI T_AOP 0 0 0 4000; *
MODI 1000
    [69:50;1] MODI T_AOP 0 0 0 1000; *
POP
    [70:51;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 1
    [71:52;1] PUSHI T_PUSH 0 0 0 1; *
MODRI 4.567
    [72:53;1] MODRI T_AOP 0 0 0 4.567; *
POP
    [73:54;0] POPS T_POP 0 0 0; [< * * >]
PUSHI 1000
    [74:55;1] PUSHI T_PUSH 0 0 0 1000; *
PUSHI 4567
    [75:56;2] PUSHI T_PUSH 0 0 0 4567; *
MODR
    [76:57;1] MODR T_AOP 0 0 0; *
POP
    [77:58;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [79:59;1] PUSHI T_PUSH 0 0 0 1.5; *
FLOOR
    [80:60;1] FLOOR T_AOP 0 0 0; *
CEIL
    [81:61;1] CEIL T_AOP 0 0 0; *
ADDI 0.1
    [82:62;1] ADDI T_AOP 0 0 0 0.1; *
CEIL
    [83:63;1] CEIL T_AOP 0 0 0; *
FLOOR
    [84:64;1] FLOOR T_AOP 0 0 0; *
POP
    [85:65;0] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [87:66;1] PUSHI T_PUSH 0 0 0 1.5; *
TRUNC
    [88:67;1] TRUNC T_AOP 0 0 0; *
ROUND
    [89:68;1] ROUND T_AOP 0 0 0; *
PUSHI 2.5
    [90:69;2] PUSHI T_PUSH 0 0 0 2.5; *
TRUNC
    [91:70;2] TRUNC T_AOP 0 0 0; *
ROUND
    [92:71;2] ROUND T_AOP 0 0 0; *
PUSHI -1.5
    [93:72;3] PUSHI T_PUSH 0 0 0 -1.5; *
TRUNC
    [94:73;3] TRUNC T_AOP 0 0 0; *
ROUND
    [95:74;3] ROUND T_AOP 0 0 0; *
PUSHI -2.5
    [96:75;4] PUSHI T_PUSH 0 0 0 -2.5; *
TRUNC
    [97:76;4] TRUNC T_AOP 0 0 0; *
ROUND
    [98:77;4] ROUND T_AOP 0 0 0; *
POP
    [99:78;3] POPS T_POP 0 0 0; [< * * >]

PUSHI 1.5
    [101:79;4] PUSHI T_PUSH 0 0 0 1.5; *
ROUND
    [102:80;4] ROUND T_AOP 0 0 0; *
TRUNC
    [103:81;4] TRUNC T_AOP 0 0 0; *
PUSHI 2.5
    [104:82;5] PUSHI T_PUSH 0 0 0 2.5; *
ROUND
    [105:83;5] ROUND T_AOP 0 0 0; *
TRUNC
    [106:84;5] TRUNC T_AOP 0 0 0; *
PUSHI -1.5
    [107:85;6] PUSHI T_PUSH 0 0 0 -1.5; *
ROUND
    [108:86;6] ROUND T_AOP 0 0 0; *
TRUNC
    [109:87;6] TRUNC T_AOP 0 0 0; *
PUSHI -2.5
    [110:88;7] PUSHI T_PUSH 0 0 0 -2.5; *
ROUND
    [111:89;7] ROUND T_AOP 0 0 0; *
TRUNC
    [112:90;7] TRUNC T_AOP 0 0 0; *
POP
    [113:91;6] POPS T_POP 0 0 0; [< * * >]

PUSHI 1234
    [115:92;7] PUSHI T_PUSH 0 0 0 1234; *
LOG
    [116:93;7] LOG T_AOP 0 0 0; *
EXP
    [117:94;7] EXP T_AOP 0 0 0; *
LOG10
    [118:95;7] LOG10 T_AOP 0 0 0; *
EXP10
    [119:96;7] EXP10 T_AOP 0 0 0; *
POP
    [120:97;6] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [122:98;7] PUSHI T_PUSH 0 0 0 1; *
ASIN DEG90
    [123:99;7] ASIN T_AOP 0 0 0; DEG90
PUSH DEG90
    [124:100;8] PUSHS T_PUSH 0 0 0; [< DEG90 * >]
SIN
    [125:101;8] SIN T_AOP 0 0 0; *
PUSH DEG90
    [126:102;9] PUSHS T_PUSH 1 0 0; [< DEG90 * >]
COS
    [127:103;9] COS T_AOP 0 0 0; *
PUSH DEG90
    [128:104;10] PUSHS T_PUSH 2 0 0; [< DEG90 * >]
TAN
    [129:105;10] TAN T_AOP 0 0 0; *
POP
    [130:106;9] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [132:107;10] PUSHI T_PUSH 0 0 0 1; *
ATAN DEG45
    [133:108;10] ATAN T_AOP 0 0 0; DEG45
PUSH DEG45
    [134:109;11] PUSHS T_PUSH 0 0 0; [< DEG45 * >]
SIN
    [135:110;11] SIN T_AOP 0 0 0; *
PUSH DEG45
    [136:111;12] PUSHS T_PUSH 1 0 0; [< DEG45 * >]
COS
    [137:112;12] COS T_AOP 0 0 0; *
PUSH DEG45
    [138:113;13] PUSHS T_PUSH 2 0 0; [< DEG45 * >]
TAN
    [139:114;13] TAN T_AOP 0 0 0; *
POP
    [140:115;12] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [142:116;13] PUSHI T_PUSH 0 0 0 1; *
ACOS DEG0
    [143:117;13] ACOS T_AOP 0 0 0; DEG0
PUSH DEG0
    [144:118;14] PUSHS T_PUSH 0 0 0; [< DEG0 * >]
SIN
    [145:119;14] SIN T_AOP 0 0 0; *
PUSH DEG0
    [146:120;15] PUSHS T_PUSH 1 0 0; [< DEG0 * >]
COS
    [147:121;15] COS T_AOP 0 0 0; *
PUSH DEG0
    [148:122;16] PUSHS T_PUSH 2 0 0; [< DEG0 * >]
TAN
    [149:123;16] TAN T_AOP 0 0 0; *
POP
    [150:124;15] POPS T_POP 0 0 0; [< * * >]

PUSHI 1
    [152:125;16] PUSHI T_PUSH 0 0 0 1; *
PUSHI 1
    [153:126;17] PUSHI T_PUSH 0 0 0 1; *
ATAN2
    [154:127;16] ATAN2 T_AOP 0 0 0; *
POP
    [155:128;15] POPS T_POP 0 0 0; [< * * >]
PUSHI 10
    [156:129;16] PUSHI T_PUSH 0 0 0 10; *
PUSHI -10
    [157:130;17] PUSHI T_PUSH 0 0 0 -10; *
ATAN2
    [158:131;16] ATAN2 T_AOP 0 0 0; *
POP
    [159:132;15] POPS T_POP 0 0 0; [< * * >]
PUSHI -10
    [160:133;16] PUSHI T_PUSH 0 0 0 -10; *
PUSHI 10
    [161:134;17] PUSHI T_PUSH 0 0 0 10; *
ATAN2R
    [162:135;16] ATAN2R T_AOP 0 0 0; *
POP
    [163:136;15] POPS T_POP 0 0 0; [< * * >]

PUSHI 2
    [165:137;16] PUSHI T_PUSH 0 0 0 2; *
POWI 10
    [166:138;16] POWI T_AOP 10 0 0; *
POP
    [167:139;15] POPS T_POP 0 0 0; [< * * >]
PUSHI 0
    [168:140;16] PUSHI T_PUSH 0 0 0 0; *
POWI 10
    [169:141;16] POWI T_AOP 10 0 0; *
POP
    [170:142;15] POPS T_POP 0 0 0; [< * * >]
PUSHI 0
    [171:143;16] PUSHI T_PUSH 0 0 0 0; *
POWI 0
    [172:144;16] POWI T_AOP 0 0 0; *
POP
    [173:145;15] POPS T_POP 0 0 0; [< * * >]
* {14:0,0,0} PUSHI: * <= 101
* {15:1,1,1} NEG: * = -101 <= - 101
* {16:2,1,2} ABS: * = 101 <= abs -101
* {17:3,1,3} POPS: * <= * = 101
* {19:4,0,4} PUSHI: * <= 100
* {20:5,1,5} PUSHI: * <= 10
* {21:6,2,6} ADD: * = 110 <= 100 + 10
* {22:7,1,7} PUSHI: * <= 10
* {23:8,2,8} SUB: * = 100 <= 110 - 10
* {24:9,1,9} POPS: * <= * = 100
* {26:10,0,10} PUSHI: * <= 100
* {27:11,1,11} ADDI: * = 110 <= 100 + 10
* {28:12,1,12} SUBI: * = 100 <= 110 - 10
* {29:13,1,13} POPS: * <= * = 100
* {31:14,0,14} PUSHI: * <= 10
* {32:15,1,15} PUSHI: * <= 110
* {33:16,2,16} SUBR: * = 100 <= 110 - 10
* {34:17,1,17} POPS: * <= * = 100
* {35:18,0,18} PUSHI: * <= 10
* {36:19,1,19} SUBRI: * = 100 <= 110 - 10
* {37:20,1,20} POPS: * <= * = 100
* {39:21,0,21} PUSHI: * <= 123
* {40:22,1,22} PUSHI: * <= 5
* {41:23,2,23} MUL: * = 615 <= 123 * 5
* {42:24,1,24} PUSHI: * <= 5
* {43:25,2,25} DIV: * = 123 <= 615 / 5
* {44:26,1,26} MULI: * = 615 <= 123 * 5
* {45:27,1,27} DIVI: * = 123 <= 615 / 5
* {46:28,1,28} MULI: * = 615 <= 123 * 5
* {47:29,1,29} SUBI: * = 614 <= 615 - 1
* {48:30,1,30} DIVI: * = 122.8 <= 614 / 5
* {49:31,1,31} POPS: * <= * = 122.8
* {51:32,0,32} PUSHI: * <= 5
* {52:33,1,33} PUSHI: * <= 5
* {53:34,2,34} PUSHI: * <= 123
* {54:35,3,35} MUL: * = 615 <= 5 * 123
* {55:36,2,36} DIVR: * = 123 <= 615 / 5
* {56:37,1,37} POPS: * <= * = 123
* {57:38,0,38} PUSHI: * <= 5
* {58:39,1,39} PUSHI: * <= 615
* {59:40,2,40} DIVR: * = 123 <= 615 / 5
* {60:41,1,41} POPS: * <= * = 123
* {61:42,0,42} PUSHI: * <= 5
* {62:43,1,43} DIVRI: * = 123 <= 615 / 5
* {63:44,1,44} POPS: * <= * = 123
* {65:45,0,45} PUSHI: * <= 4.567
* {66:46,1,46} PUSHI: * <= 1
* {67:47,2,47} MOD: * = 0.567 <= 4.567 fmod 1
* {68:48,1,48} MULI: * = 567 <= 0.567 * 1000
* {69:49,1,49} ADDI: * = 4567 <= 567 + 4000
* {70:50,1,50} MODI: * = 567 <= 4567 fmod 1000
* {71:51,1,51} POPS: * <= * = 567
* {72:52,0,52} PUSHI: * <= 1
* {73:53,1,53} MODRI: * = 0.567 <= 4.567 fmod 1
* {74:54,1,54} POPS: * <= * = 0.567
* {75:55,0,55} PUSHI: * <= 1000
* {76:56,1,56} PUSHI: * <= 4567
* {77:57,2,57} MODR: * = 567 <= 4567 fmod 1000
* {78:58,1,58} POPS: * <= * = 567
* {80:59,0,59} PUSHI: * <= 1.5
* {81:60,1,60} FLOOR: * = 1 <= floor 1.5
* {82:61,1,61} CEIL: * = 1 <= ceil 1
* {83:62,1,62} ADDI: * = 1.1 <= 1 + 0.1
* {84:63,1,63} CEIL: * = 2 <= ceil 1.1
* {85:64,1,64} FLOOR: * = 2 <= floor 2
* {86:65,1,65} POPS: * <= * = 2
* {88:66,0,66} PUSHI: * <= 1.5
* {89:67,1,67} TRUNC: * = 1 <= trunc 1.5
* {90:68,1,68} ROUND: * = 1 <= round 1
* {91:69,1,69} PUSHI: * <= 2.5
* {92:70,2,70} TRUNC: * = 2 <= trunc 2.5
* {93:71,2,71} ROUND: * = 2 <= round 2
* {94:72,2,72} PUSHI: * <= -1.5
* {95:73,3,73} TRUNC: * = -1 <= trunc -1.5
* {96:74,3,74} ROUND: * = -1 <= round -1
* {97:75,3,75} PUSHI: * <= -2.5
* {98:76,4,76} TRUNC: * = -2 <= trunc -2.5
* {99:77,4,77} ROUND: * = -2 <= round -2
* {100:78,4,78} POPS: * <= * = -2
* {102:79,3,79} PUSHI: * <= 1.5
* {103:80,4,80} ROUND: * = 2 <= round 1.5
* {104:81,4,81} TRUNC: * = 2 <= trunc 2
* {105:82,4,82} PUSHI: * <= 2.5
* {106:83,5,83} ROUND: * = 2 <= round 2.5
* {107:84,5,84} TRUNC: * = 2 <= trunc 2
* {108:85,5,85} PUSHI: * <= -1.5
* {109:86,6,86} ROUND: * = -2 <= round -1.5
* {110:87,6,87} TRUNC: * = -2 <= trunc -2
* {111:88,6,88} PUSHI: * <= -2.5
* {112:89,7,89} ROUND: * = -2 <= round -2.5
* {113:90,7,90} TRUNC: * = -2 <= trunc -2
* {114:91,7,91} POPS: * <= * = -2
* {116:92,6,92} PUSHI: * <= 1234
* {117:93,7,93} LOG: * = 7.11801620446533 <= log 1234
* {118:94,7,94} EXP: * = 1234 <= exp 7.11801620446533
* {119:95,7,95} LOG10: * = 3.09131515969722 <= log10 1234
* {120:96,7,96} EXP10: * = 1234 <= exp10 3.09131515969722
* {121:97,7,97} POPS: * <= * = 1234
* {123:98,6,98} PUSHI: * <= 1
* {124:99,7,99} ASIN: DEG90 = 1.5707963267949 <= asin 1
* {125:100,7,100} PUSHS: * <= DEG90 = 1.5707963267949
* {126:101,8,101} SIN: * = 1 <= sin 1.5707963267949
* {127:102,8,102} PUSHS: * <= DEG90 = 1.5707963267949
* {128:103,9,103} COS: * = 6.12323399573677e-17 <= cos 1.5707963267949
* {129:104,9,104} PUSHS: * <= DEG90 = 1.5707963267949
* {130:105,10,105} TAN: * = 1.63312393531954e+16 <= tan 1.5707963267949
* {131:106,10,106} POPS: * <= * = 1.63312393531954e+16
* {133:107,9,107} PUSHI: * <= 1
* {134:108,10,108} ATAN: DEG45 = 0.785398163397448 <= atan 1
* {135:109,10,109} PUSHS: * <= DEG45 = 0.785398163397448
* {136:110,11,110} SIN: * = 0.707106781186547 <= sin 0.785398163397448
* {137:111,11,111} PUSHS: * <= DEG45 = 0.785398163397448
* {138:112,12,112} COS: * = 0.707106781186548 <= cos 0.785398163397448
* {139:113,12,113} PUSHS: * <= DEG45 = 0.785398163397448
* {140:114,13,114} TAN: * = 1 <= tan 0.785398163397448
* {141:115,13,115} POPS: * <= * = 1
* {143:116,12,116} PUSHI: * <= 1
* {144:117,13,117} ACOS: DEG0 = 0 <= acos 1
* {145:118,13,118} PUSHS: * <= DEG0 = 0
* {146:119,14,119} SIN: * = 0 <= sin 0
* {147:120,14,120} PUSHS: * <= DEG0 = 0
* {148:121,15,121} COS: * = 1 <= cos 0
* {149:122,15,122} PUSHS: * <= DEG0 = 0
* {150:123,16,123} TAN: * = 0 <= tan 0
* {151:124,16,124} POPS: * <= * = 0
* {153:125,15,125} PUSHI: * <= 1
* {154:126,16,126} PUSHI: * <= 1
* {155:127,17,127} ATAN2: * = 0.785398163397448 <= 1 atan2 1
* {156:128,16,128} POPS: * <= * = 0.785398163397448
* {157:129,15,129} PUSHI: * <= 10
* {158:130,16,130} PUSHI: * <= -10
* {159:131,17,131} ATAN2: * = 2.35619449019234 <= 10 atan2 -10
* {160:132,16,132} POPS: * <= * = 2.35619449019234
* {161:133,15,133} PUSHI: * <= -10
* {162:134,16,134} PUSHI: * <= 10
* {163:135,17,135} ATAN2R: * = 2.35619449019234 <= 10 atan2 -10
* {164:136,16,136} POPS: * <= * = 2.35619449019234
* {166:137,15,137} PUSHI: * <= 2
* {167:138,16,138} POWI: * = 1024 <= pow 2 10
* {168:139,16,139} POPS: * <= * = 1024
* {169:140,15,140} PUSHI: * <= 0
* {170:141,16,141} POWI: * = 0 <= pow 0 10
* {171:142,16,142} POPS: * <= * = 0
* {172:143,15,143} PUSHI: * <= 0
* {173:144,16,144} POWI: * = 1 <= pow 0 0
* {174:145,16,145} POPS: * <= * = 1
mexas_compile_test_4.mex successfully compiled
