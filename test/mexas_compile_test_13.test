// MEXAS Compile Test 13 Input
//
// File:        mexas_compile_test_13.mex
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Feb 21 02:17:01 AM EST 2025
//
// The authors have placed this program in the public
// domain; they make no warranty and accept no liability
// for this program.
// MEXAS Time Test

// Empty stack test
//
PUSHI 100
    [14:0;1] PUSHI T_PUSH 0 0 0 100; *
TEST_INSTRUCTION ADD  // stack too small
    [15:1;1] ADD T_AOP 0 0 0
TEST_INSTRUCTION JMP  // immedC = 0
    [16:2;1] JMP T_JMP 0 0 0
PUSHI "HELLO"
    [17:3;2] PUSHI T_PUSH 0 0 0 "HELLO"; *
TEST_INSTRUCTION JMPGEQ 0 0 1 // invalid arg
    [18:4;2] JMPGEQ T_JMPS 0 0 1
TEST_INSTRUCTION JMP 100 0 1 // immedA too large
    [19:5;2] JMP T_JMP 100 0 1
TEST_INSTRUCTION JMP 0 0 1000000 // immedC too large
    [20:6;2] JMP T_JMP 0 0 1000000
PUSHI +INF
    [21:7;3] PUSHI T_PUSH 0 0 0 inf; *
TEST_INSTRUCTION JMPCNT 0 0 1 1 // INF count
    [22:8;3] JMPCNT T_JMPS 0 0 1 1
PUSHI 5
    [23:9;4] PUSHI T_PUSH 0 0 0 5; *
TEST_INSTRUCTION JMPCNT 0 0 1 // immedD <= 0
    [24:10;4] JMPCNT T_JMPS 0 0 1
PUSHI 0
    [25:11;5] PUSHI T_PUSH 0 0 0 0; *
PUSHI +INF
    [26:12;6] PUSHI T_PUSH 0 0 0 inf; *
PUSHI +INF
    [27:13;7] PUSHI T_PUSH 0 0 0 inf; *
TEST_INSTRUCTION JMPGEQ 0 1 1 // invalid arg
    [28:14;7] JMPGEQ T_JMPS 0 1 1
PUSHI NAN
    [29:15;8] PUSHI T_PUSH 0 0 0 nan; *
TEST_INSTRUCTION JMPGEQ 0 0 1 // invalid arg
    [30:16;8] JMPGEQ T_JMPS 0 0 1
TEST_INSTRUCTION JMPGEQ 0 4 1 // immedB is not 0 or 1
    [31:17;8] JMPGEQ T_JMPS 0 4 1
TEST_INSTRUCTION JMP [ 5 ] 0 0 1 // too big trace depth
    [32:18;8] JMP T_JMP[5] 0 0 1
TEST_INSTRUCTION PUSHS 100  // too big immedA
    [33:19;8] PUSHS T_PUSH 100 0 0
TEST_INSTRUCTION PUSHG  // no module
    [34:20;8] PUSHG T_PUSH 0 0 0
TEST_INSTRUCTION PUSHL 0 1  // immedB > lexical level
    [35:21;8] PUSHL T_PUSH 0 1 0
TEST_INSTRUCTION PUSHL 1000  // immedA > stack length
    [36:22;8] PUSHL T_PUSH 1000 0 0

DUMP "Stack Dump" s0 s1 s2
    [38:23;8] DUMP T_ALWAYS 0 0 0; [< "Stack Dump" s0 s1 s2 >]

BEGF PUSH-POP-TEST ARG1 ARG2
    [40:24;10] BEGF T_BEGF 2 1 0; [< PUSH-POP-TEST ARG1 ARG2 >]
    TEST_INSTRUCTION PUSHL 1000 1
    [41:25;10] PUSHL T_PUSH 1000 1 0
        // fp[1] + immedA > stack length
    TEST_INSTRUCTION PUSHL 1000 0
    [43:26;10] PUSHL T_PUSH 1000 0 0
        // fp[0] + immedA > ap[1]
    TEST_INSTRUCTION PUSHA 0 2  // immedB > p->level
    [45:27;10] PUSHA T_PUSH 0 2 0
    TEST_INSTRUCTION PUSHA 3 1  // immedA > fp[1]
    [46:28;10] PUSHA T_PUSH 3 1 0
    TEST_INSTRUCTION PUSHNARGS  // immedB == 0
    [47:29;10] PUSHNARGS T_PUSH 0 0 0
    PUSHI 2.5
    [48:30;11] PUSHI T_PUSH 0 0 0 2.5; *
    TEST_INSTRUCTION PUSHV 0 2  // immedB > p->level
    [49:31;11] PUSHV T_PUSH 0 2 0
    TEST_INSTRUCTION PUSHV 0 1  // top not int >= 0
    [50:32;11] PUSHV T_PUSH 0 1 0
    TEST_INSTRUCTION POPS 10    // immedA > frame len
    [51:33;11] POPS T_POP 10 0 0
    TEST_INSTRUCTION DEL 10 0 1
    [52:34;11] DEL T_POP 10 0 1
        // immedA + immedC > frame length
    PUSHI "RESULT"
    [54:35;12] PUSHI T_PUSH 0 0 0 "RESULT"; *
    RET 1
    [55:36;11] RET T_RET 0 1 1
ENDF
    [40:24;11] BEGF T_BEGF 2 1 14; [< PUSH-POP-TEST ARG1 ARG2 >]
    [56:37;8] ENDF T_ENDF 0 1 0

PUSHI "VALUE 1"
    [58:38;9] PUSHI T_PUSH 0 0 0 "VALUE 1"; *
PUSHI "VALUE 2"
    [59:39;10] PUSHI T_PUSH 0 0 0 "VALUE 2"; *
CALL PUSH-POP-TEST 2 RESULT
    [60:40;9] CALLM T_CALLM 2 1 24; [< PUSH-POP-TEST RESULT >]

PUSHI 10
    [62:41;10] PUSHI T_PUSH 0 0 0 10; *
PUSHI 20
    [63:42;11] PUSHI T_PUSH 0 0 0 20; *
TEST_INSTRUCTION VPUSH 1
    [64:43;11] VPUSH T_SET 1 0 0
TEST_INSTRUCTION VPOP 1
    [65:44;11] VPOP T_GET 1 0 0

BEGF GET-SET-VSIZE-TEST
    [67:45;11] BEGF T_BEGF 0 1 0; [< GET-SET-VSIZE-TEST >]
    TEST_INSTRUCTION VSIZE
    [68:46;11] VSIZE T_GET 0 0 0
    PUSHI 1
    [69:47;12] PUSHI T_PUSH 0 0 0 1; *
    PUSHI 2
    [70:48;13] PUSHI T_PUSH 0 0 0 2; *
    TEST_INSTRUCTION GET 10
    [71:49;13] GET T_GET 10 0 0
    TEST_INSTRUCTION SET 10
    [72:50;13] SET T_SET 10 0 0
    PUSHOBJ 10 5
    [73:51;14] PUSHOBJ T_SET 10 0 5; *
    PUSHI 1e10
    [74:52;15] PUSHI T_PUSH 0 0 0 10000000000; *
    TEST_INSTRUCTION GET 1
    [75:53;15] GET T_GET 1 0 0
    PUSHI 3
    [76:54;16] PUSHI T_PUSH 0 0 0 3; *
    TEST_INSTRUCTION SET 2
    [77:55;16] SET T_SET 2 0 0
    POP
    [78:56;15] POPS T_POP 0 0 0; [< * * >]
    POP
    [79:57;14] POPS T_POP 0 0 0; [< * * >]
    PUSHI TRUE
    [80:58;15] PUSHI T_PUSH 0 0 0 *TRUE*; *
    TEST_INSTRUCTION GET 1
    [81:59;15] GET T_GET 1 0 0
    PUSHI 3
    [82:60;16] PUSHI T_PUSH 0 0 0 3; *
    TEST_INSTRUCTION SET 2
    [83:61;16] SET T_SET 2 0 0
    POP
    [84:62;15] POPS T_POP 0 0 0; [< * * >]
    POP
    [85:63;14] POPS T_POP 0 0 0; [< * * >]
    PUSHI 5
    [86:64;15] PUSHI T_PUSH 0 0 0 5; *
    PUSHI 6
    [87:65;16] PUSHI T_PUSH 0 0 0 6; *
    TEST_INSTRUCTION SET 2
    [88:66;16] SET T_SET 2 0 0
    POP
    [89:67;15] POPS T_POP 0 0 0; [< * * >]
    POP
    [90:68;14] POPS T_POP 0 0 0; [< * * >]
    TEST_INSTRUCTION GETI 10
    [91:69;14] GETI T_GET 10 0 0
    TEST_INSTRUCTION GETI 0
    [92:70;14] GETI T_GET 0 0 0
    PUSHI 5
    [93:71;15] PUSHI T_PUSH 0 0 0 5; *
    TEST_INSTRUCTION GETI 0 0 0 "foo"
    [94:72;15] GETI T_GET 0 0 0 "foo"
    TEST_INSTRUCTION SETI 10
    [95:73;15] SETI T_SET 10 0 0
    PUSHI 6
    [96:74;16] PUSHI T_PUSH 0 0 0 6; *
    TEST_INSTRUCTION SETI 1 0 0 "foo"
    [97:75;16] SETI T_SET 1 0 0 "foo"
    POP
    [98:76;15] POPS T_POP 0 0 0; [< * * >]
    TEST_INSTRUCTION SETI 1 0 0 TRUE
    [99:77;15] SETI T_SET 1 0 0 *TRUE*
    RET 0
    [100:78;15] RET T_RET 0 1 0
ENDF
    [67:45;15] BEGF T_BEGF 0 1 35; [< GET-SET-VSIZE-TEST >]
    [101:79;11] ENDF T_ENDF 0 1 0

CALL GET-SET-VSIZE-TEST 0
    [103:80;11] CALLM T_CALLM 0 0 45; [< GET-SET-VSIZE-TEST >]

TEST_INSTRUCTION END
    [105:81;11] END T_END 0 0 0

BEGF BEG-END-TEST ARG1
    [107:82;12] BEGF T_BEGF 1 1 0; [< BEG-END-TEST ARG1 >]
    TEST_INSTRUCTION BEG 10
    [108:83;12] BEG T_BEG 10 0 0
    TEST_INSTRUCTION BEGL 0 10
    [109:84;12] BEGL T_BEGL 0 10 0
    TEST_INSTRUCTION ENDL 10
    [110:85;12] ENDL T_ENDL 10 0 0
    TEST_INSTRUCTION CONT 10
    [111:86;12] CONT T_CONT 10 0 0
    TEST_INSTRUCTION ENDL 0 5
    [112:87;12] ENDL T_ENDL 0 5 0
    TEST_INSTRUCTION CONT 0 5
    [113:88;12] CONT T_CONT 0 5 0
    TEST_INSTRUCTION ENDL 0 0 100
    [114:89;12] ENDL T_ENDL 0 0 100
    TEST_INSTRUCTION CONT 0 0 100
    [115:90;12] CONT T_CONT 0 0 100
    TEST_INSTRUCTION CONT [ 2 ]
    [116:91;12] CONT T_CONT[2] 0 0 0
    TEST_INSTRUCTION TRACE 10
    [117:92;12] TRACE T_ALWAYS 10 0 0
    TEST_INSTRUCTION WARN 10
    [118:93;12] WARN T_ALWAYS 10 0 0
    TEST_INSTRUCTION ERROR 10
    [119:94;12] ERROR T_ALWAYS 10 0 0
    TEST_INSTRUCTION BEGF 0 2 1000
    [120:95;12] BEGF T_BEGF 0 2 1000
    TEST_INSTRUCTION BEGF 0 1
    [121:96;12] BEGF T_BEGF 0 1 0
    TEST_INSTRUCTION RET 0 0
    [122:97;12] RET T_RET 0 0 0
    TEST_INSTRUCTION ENDF 0 0
    [123:98;12] ENDF T_ENDF 0 0 0
    TEST_INSTRUCTION RET 0 1 2
    [124:99;12] RET T_RET 0 1 2
    TEST_INSTRUCTION RET 0 1 1
    [125:100;12] RET T_RET 0 1 1
    PUSHI 200
    [126:101;13] PUSHI T_PUSH 0 0 0 200; *
    RET 1
    [127:102;12] RET T_RET 0 1 1
ENDF
    [107:82;12] BEGF T_BEGF 1 1 22; [< BEG-END-TEST ARG1 >]
    [128:103;11] ENDF T_ENDF 0 1 0

PUSHI 100
    [130:104;12] PUSHI T_PUSH 0 0 0 100; *
CALL BEG-END-TEST 1 X
    [131:105;12] CALLM T_CALLM 1 1 82; [< BEG-END-TEST X >]

TEST_INSTRUCTION RET
    [133:106;12] RET T_RET 0 0 0
TEST_INSTRUCTION ENDF
    [134:107;12] ENDF T_ENDF 0 0 0

TEST_INSTRUCTION CALLG
    [136:108;12] CALLG T_CALLG 0 0 0
TEST_INSTRUCTION CALLM 0 0 10000
    [137:109;12] CALLM T_CALLM 0 0 10000
TEST_INSTRUCTION CALLM 0 0 0
    [138:110;12] CALLM T_CALLM 0 0 0
* {14:0,1,1} PUSHI: * <= 100
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
* {15:1,1,2} ADD AOP 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 100 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    JMP immedC == 0; illegal
    PC MODULE FILE IS mexas_compile_test_13.mex
* {16:2,1,3} JMP JMP 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 99 > 0
* {17:3,2,4} PUSHI: * <= "HELLO"
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
    conditional jump instruction
* {18:4,0,5} JMPGEQ location 5 with invalid operand(s)
             ARGS = 100 "HELLO"
TREATING JMP AS UNSUCCESSFUL AND CONTINUING BECAUSE PROCESS->TEST == 98
    > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    JMP immedA is greater than stack size
    PC MODULE FILE IS mexas_compile_test_13.mex
* {19:5,0,6} JMP JMP 100 0 1 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 97 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    JMP immedC too large; target is beyond module end
    PC MODULE FILE IS mexas_compile_test_13.mex
* {20:6,0,7} JMP JMP 0 0 1000000 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 96 > 0
* {21:7,1,8} PUSHI: * <= inf
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
    conditional jump instruction
* {22:8,1,9} JMPCNT location 9 with invalid operand(s)
             ARGS = inf 1
TREATING JMP AS UNSUCCESSFUL AND CONTINUING BECAUSE PROCESS->TEST == 95
    > 0
* {23:9,2,10} PUSHI: * <= 5
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    JMPCNT immedD is not a finite number > 0
    PC MODULE FILE IS mexas_compile_test_13.mex
* {24:10,2,11} JMPCNT JMPS 0 0 1 *MISSING*
    ARGS = 5 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 94 > 0
* {25:11,3,12} PUSHI: * <= 0
* {26:12,4,13} PUSHI: * <= inf
* {27:13,5,14} PUSHI: * <= inf
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
    conditional jump instruction
* {28:14,4,15} JMPGEQ* location 15 with invalid operand(s)
               ARGS = inf inf
TREATING JMP AS UNSUCCESSFUL AND CONTINUING BECAUSE PROCESS->TEST == 93
    > 0
* {29:15,5,16} PUSHI: * <= nan
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL ERROR:  invalid operands to a
    conditional jump instruction
* {30:16,3,17} JMPGEQ location 17 with invalid operand(s)
               ARGS = inf nan
TREATING JMP AS UNSUCCESSFUL AND CONTINUING BECAUSE PROCESS->TEST == 92
    > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    JMP immedB != 0 or 1; illegal
    PC MODULE FILE IS mexas_compile_test_13.mex
* {31:17,3,18} JMPGEQ JMPS 0 4 1 *MISSING*
    ARGS = 5 0
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 91 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    if JMP were executed, trace_depth would become negative
    PC MODULE FILE IS mexas_compile_test_13.mex
* {32:18,3,19} JMP JMP [5] 0 0 1 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 90 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
* {33:19,3,20} PUSHS PUSH 100 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 89 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHG immedD is not a module
    PC MODULE FILE IS mexas_compile_test_13.mex
* {34:20,3,21} PUSHG PUSH 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 88 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHL immedB larger than current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
* {35:21,3,22} PUSHL PUSH 0 1 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 87 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHL immedA too large; addresses variable beyond the end of the
    function frame
    PC MODULE FILE IS mexas_compile_test_13.mex
* {36:22,3,23} PUSHL PUSH 1000 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 86 > 0
* {38:23,3,24} DUMP: "Stack Dump", s0=inf, s1=5, s2=0
* {40:24,3,25} BEGF
* {58:38,4,26} PUSHI: * <= "VALUE 1"
* {59:39,5,27} PUSHI: * <= "VALUE 2"
* {60:40,5,28} CALLM to BEGF: PUSH-POP-TEST, ARG1="VALUE 1",
                              ARG2="VALUE 2"
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHL immedA too large; addresses variable beyond the end of the
    function frame
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {41:25,5,29} PUSHL PUSH 1000 1 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 85 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHL immedA too large; addresses variable beyond the end of the
    function frame
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {43:26,5,30} PUSHL PUSH 1000 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 84 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHA: invalid immedB; 0 or greater than current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {45:27,5,31} PUSHA PUSH 0 2 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 83 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHA immedA too large; addresses non-extant argument
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {46:28,5,32} PUSHA PUSH 3 1 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 82 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHNARGS: invalid immedB; 0 or greater than current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {47:29,5,33} PUSHNARGS PUSH 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 81 > 0
*** {48:30,6,34} PUSHI: * <= 2.5
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHV immedB is 0 or greater than current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {49:31,6,35} PUSHV PUSH 0 2 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 80 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    PUSHV: top of stack is not a non-negative integer
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {50:32,6,36} PUSHV PUSH 0 1 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 79 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {51:33,6,37} POPS POP 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 78 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {52:34,6,38} DEL POP 10 0 1 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 77 > 0
*** {54:35,7,39} PUSHI: * <= "RESULT"
*** {55:36,4,40} RET to CALLM: PUSH-POP-TEST, RESULT="RESULT"
* {62:41,5,41} PUSHI: * <= 10
* {63:42,6,42} PUSHI: * <= 20
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    object argument is not an object
    PC MODULE FILE IS mexas_compile_test_13.mex
* {64:43,6,43} VPUSH SET 1 0 0 *MISSING*
    ARGS = 10
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 76 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    object argument is not an object
    PC MODULE FILE IS mexas_compile_test_13.mex
* {65:44,6,44} VPOP GET 1 0 0 *MISSING*
    ARGS = 10
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 75 > 0
* {67:45,6,45} BEGF
* {103:80,6,46} CALLM to BEGF: GET-SET-VSIZE-TEST
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {68:46,6,47} VSIZE GET 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 74 > 0
*** {69:47,7,48} PUSHI: * <= 1
*** {70:48,8,49} PUSHI: * <= 2
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {71:49,8,50} GET GET 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 73 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {72:50,8,51} SET SET 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 72 > 0
*** {73:51,9,52} PUSHOBJ: * <= NEW OBJ ( 10, 5)
*** {74:52,10,53} PUSHI: * <= 10000000000
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    GET: numeric label is not integer in range (-1e9, +1e9)
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {75:53,10,54} GET GET 1 0 0 *MISSING*
    ARGS = {} 10000000000
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 71 > 0
*** {76:54,11,55} PUSHI: * <= 3
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    SET: numeric label is not integer in range (-1e9, +1e9)
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {77:55,11,56} SET SET 2 0 0 *MISSING*
    ARGS = {} 10000000000
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 70 > 0
*** {78:56,10,57} POPS: * <= * = 3
*** {79:57,9,58} POPS: * <= * = 10000000000
*** {80:58,10,59} PUSHI: * <= *TRUE*
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    label argument is not a label
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {81:59,10,60} GET GET 1 0 0 *MISSING*
    ARGS = {} *TRUE*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 69 > 0
*** {82:60,11,61} PUSHI: * <= 3
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    label argument is not a label
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {83:61,11,62} SET SET 2 0 0 *MISSING*
    ARGS = {} *TRUE*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 68 > 0
*** {84:62,10,63} POPS: * <= * = 3
*** {85:63,9,64} POPS: * <= * = *TRUE*
*** {86:64,10,65} PUSHI: * <= 5
*** {87:65,11,66} PUSHI: * <= 6
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    SET: vector element does not exist
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {88:66,11,67} SET SET 2 0 0 *MISSING*
    ARGS = {} 5
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 67 > 0
*** {89:67,10,68} POPS: * <= * = 6
*** {90:68,9,69} POPS: * <= * = 5
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {91:69,9,70} GETI GET 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 66 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    label argument is not a label
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {92:70,9,71} GETI GET 0 0 0 *MISSING*
    ARGS = {} *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 65 > 0
*** {93:71,10,72} PUSHI: * <= 5
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    object argument is not an object
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {94:72,10,73} GETI GET 0 0 0 foo
    ARGS = 5 "foo"
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 64 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {95:73,10,74} SETI SET 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 63 > 0
*** {96:74,11,75} PUSHI: * <= 6
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    object argument is not an object
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {97:75,11,76} SETI SET 1 0 0 foo
    ARGS = 5 "foo"
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 62 > 0
*** {98:76,10,77} POPS: * <= * = 6
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    label argument is not a label
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {99:77,10,78} SETI SET 1 0 0 *TRUE*
    ARGS = {} *TRUE*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 61 > 0
*** {100:78,6,79} RET to CALLM: GET-SET-VSIZE-TEST
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    END: trace depth would become negative if instruction was executed
    PC MODULE FILE IS mexas_compile_test_13.mex
* {105:81,6,80} END END 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 60 > 0
* {107:82,6,81} BEGF
* {130:104,7,82} PUSHI: * <= 100
* {131:105,7,83} CALLM to BEGF: BEG-END-TEST, ARG1=100
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {108:83,7,84} BEG BEG 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 59 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {109:84,7,85} BEGL BEGL 0 10 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 58 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {110:85,7,86} ENDL ENDL 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 57 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {111:86,7,87} CONT CONT 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 56 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {112:87,7,88} ENDL ENDL 0 5 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 55 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {113:88,7,89} CONT CONT 0 5 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 54 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    ENDL/CONT: immedC too large; associated BEGL non-extant
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {114:89,7,90} ENDL ENDL 0 0 100 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 53 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    ENDL/CONT: immedC too large; associated BEGL non-extant
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {115:90,7,91} CONT CONT 0 0 100 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 52 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    CONT: trace depth would become negative if instruction was executed
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {116:91,7,92} CONT CONT [2] 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 51 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {117:92,7,93} TRACE ALWAYS 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 50 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {118:93,7,94} WARN ALWAYS 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 49 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {119:94,7,95} ERROR ALWAYS 10 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 48 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    BEGF: immedC too large; target address beyond module length
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {120:95,7,96} BEGF BEGF 0 2 1000 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 47 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    BEGF: immedB != current lexical level + 1
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {121:96,7,97} BEGF BEGF 0 1 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 46 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    RET/ENDF: immedB != current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {122:97,7,98} RET RET 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 45 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    RET/ENDF: immedB != current lexical level
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {123:98,7,99} ENDF ENDF 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 44 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    RET: immedC != return stack nresults
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {124:99,7,100} RET RET 0 1 2 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 43 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    current frame too small for instruction
    PC MODULE FILE IS mexas_compile_test_13.mex
*** {125:100,7,101} RET RET 0 1 1 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 42 > 0
*** {126:101,8,102} PUSHI: * <= 200
*** {127:102,7,103} RET to CALLM: BEG-END-TEST, X=200
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    RET/ENDF: return stack is empty
    PC MODULE FILE IS mexas_compile_test_13.mex
* {133:106,7,104} RET RET 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 41 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    RET/ENDF: return stack is empty
    PC MODULE FILE IS mexas_compile_test_13.mex
* {134:107,7,105} ENDF ENDF 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 40 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    CALL immedD is not a module
    PC MODULE FILE IS mexas_compile_test_13.mex
* {136:108,7,106} CALLG CALLG 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 39 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    CALL immedC is equal to or larger than module length
    PC MODULE FILE IS mexas_compile_test_13.mex
* {137:109,7,107} CALLM CALLM 0 0 10000 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 38 > 0
!!!!!!!!!!!!!!!!!!!!!!!!! FATAL PROGRAM ERROR:
    CALL target is not a BEGF
    PC MODULE FILE IS mexas_compile_test_13.mex
* {138:110,7,108} CALLM CALLM 0 0 0 *MISSING*
SKIPPING INSTRUCTION AND CONTINUING BECAUSE PROCESS->TEST == 37 > 0
mexas_compile_test_13.mex successfully compiled
