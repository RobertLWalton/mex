// MEXAS Compile Test 1 Input
//
// File:        mexas_compile_test_1.mex
// Author:      Bob Walton (walton@acm.org)
// Date:        Fri Oct 18 07:41:36 AM EDT 2024
//
// The authors have placed this program in the public
// domain; they make no warranty and accept no liability
// for this program.

// PUSH, POP, ARITHMETIC OP TEST
//
PUSHI 2 X
    [13:0;1] PUSHI T_PUSH 0 0 0 2; X
PUSHI 2 Y
    [14:1;2] PUSHI T_PUSH 0 0 0 2; Y
    STACKS: VARIABLES: 0.0 Y
                       0.0 X
ADD Z
    [16:2;1] ADD T_AOP 0 0 0; Z
    STACKS: VARIABLES: 0.0 Z
ERROR: variable named X not defined; instruction changed to PUSHI
       missing value
PUSH X
    [18:3;2] PUSHI T_PUSH 0 0 0
POP
    [19:4;1] POPS T_POP 0 0 0; [< * * >]
ERROR: in mexas_compile_test_1.mex: line ####: portion of stack in the
       current block is too little to pop required arguments;
       instruction ignored:
ADD
PUSH Z W
    [21:5;2] PUSHS T_PUSH 0 0 0; [< Z W >]
SUB
    [22:6;1] SUB T_AOP 0 0 0; *
    STACKS: VARIABLES: 0.0 *
POP
    [24:7;0] POPS T_POP 0 0 0; [< * * >]
    STACKS: VARIABLES:

// JMP TEST 1
// Z = MIN ( X, Y )
//
PUSHI 5 X
    [30:8;1] PUSHI T_PUSH 0 0 0 5; X
PUSHI 23 Y
    [31:9;2] PUSHI T_PUSH 0 0 0 23; Y
PUSHI NaN Z
    [32:10;3] PUSHI T_PUSH 0 0 0 nan; Z
    STACKS: VARIABLES: 0.0 Z
                       0.0 Y
                       0.0 X
PUSH X
    [34:11;4] PUSHS T_PUSH 2 0 0; [< X * >]
PUSH Y
    [35:12;5] PUSHS T_PUSH 2 0 0; [< Y * >]
    STACKS: VARIABLES: 0.0 *
                       0.0 *
                       0.0 Z
                       0.0 Y
                       0.0 X
JMPLT ITS-X
    [37:13;3] JMPLT T_JMPS 0 0 0; ITS-X
PUSH Y
    [38:14;4] PUSHS T_PUSH 1 0 0; [< Y * >]
POP // Z, but illegal as Z has same depth
    [39:15;3] POPS T_POP 0 0 0; [< * * >]
JMP DONE
    [40:16;3] JMP T_JMP 0 0 0; DONE
LABEL ITS-X
    [41:17;3] LABEL ITS-X
    [37:13;3] JMPLT T_JMPS 0 0 4; ITS-X
PUSH X
    [42:17;4] PUSHS T_PUSH 2 0 0; [< X * >]
POP // Z, but illegal as Z has same depth
    [43:18;3] POPS T_POP 0 0 0; [< * * >]
LABEL DONE
    [44:19;3] LABEL DONE
    [40:16;3] JMP T_JMP 0 0 3; DONE
    STACKS: VARIABLES: 0.0 Z
                       0.0 Y
                       0.0 X
POP
    [46:19;2] POPS T_POP 0 0 0; [< Z * >]

// JMP TEST 2
// Z = MIN ( X, Y )
//
    STACKS: VARIABLES: 0.0 Y
                       0.0 X
PUSH X Z
    [52:20;3] PUSHS T_PUSH 1 0 0; [< X Z >]
PUSH X
    [53:21;4] PUSHS T_PUSH 2 0 0; [< X * >]
PUSH Y
    [54:22;5] PUSHS T_PUSH 2 0 0; [< Y * >]
JMPLT ITS-X
    [55:23;3] JMPLT T_JMPS 0 0 0; ITS-X
POP
    [56:24;2] POPS T_POP 0 0 0; [< Z * >]
PUSH Y Z
    [57:25;3] PUSHS T_PUSH 0 0 0; [< Y Z >]
LABEL ITS-X
    [58:26;3] LABEL ITS-X
    [55:23;3] JMPLT T_JMPS 0 0 3; ITS-X
POP
    [59:26;2] POPS T_POP 0 0 0; [< Z * >]

// JMP TEST 3
// Z = MIN ( X, Y )
// Z pushed into stack by code jumped over
//
    STACKS: VARIABLES: 0.0 Y
                       0.0 X
PUSH X
    [66:27;3] PUSHS T_PUSH 1 0 0; [< X * >]
PUSH Y
    [67:28;4] PUSHS T_PUSH 1 0 0; [< Y * >]
JMPLT ITS-X
    [68:29;2] JMPLT T_JMPS 0 0 0; ITS-X
PUSH Y Z
    [69:30;3] PUSHS T_PUSH 0 0 0; [< Y Z >]
JMP DONE
    [70:31;3] JMP T_JMP 0 0 0; DONE
LABEL ITS-X
    [71:32;3] LABEL ITS-X
ERROR: in mexas_compile_test_1.mex: line ####: code jumped over pushes of
       values into the stack; JMP unresolved:
JMPLT ITS-X
PUSH X Z
    [72:32;4] PUSHS T_PUSH 2 0 0; [< X Z >]
LABEL DONE
    [73:33;4] LABEL DONE
ERROR: in mexas_compile_test_1.mex: line ####: code jumped over pushes of
       values into the stack; JMP unresolved:
JMP DONE
    STACKS: VARIABLES: 0.0 Z
                       0.0 Z
                       0.0 Y
                       0.0 X
POP
    [75:33;3] POPS T_POP 0 0 0; [< Z * >]
POP
    [76:34;2] POPS T_POP 0 0 0; [< Z * >]

// JMP TEST 4
// Z = MIN ( X, Y )
// Z popped from stack by code jumped over
//
    STACKS: VARIABLES: 0.0 Y
                       0.0 X
PUSH X
    [83:35;3] PUSHS T_PUSH 1 0 0; [< X * >]
PUSH Y
    [84:36;4] PUSHS T_PUSH 1 0 0; [< Y * >]
PUSH Y Z
    [85:37;5] PUSHS T_PUSH 2 0 0; [< Y Z >]
PUSH X Z
    [86:38;6] PUSHS T_PUSH 4 0 0; [< X Z >]
JMPLT ITS-X
    [87:39;4] JMPLT T_JMPS 0 0 0; ITS-X
POP
    [88:40;3] POPS T_POP 0 0 0; [< * * >]
LABEL ITS-X
    [89:41;3] LABEL ITS-X
ERROR: in mexas_compile_test_1.mex: line ####: code jumped over pops of
       values from the stack; JMP unresolved:
JMPLT ITS-X
    STACKS: VARIABLES: 0.0 *
                       0.0 Y
                       0.0 X
POP
    [91:41;2] POPS T_POP 0 0 0; [< * * >]

// JMP TEST 5
// Z = MIN ( X, Y )
// Done legally by jumping over a POP/PUSH pair.
//
    STACKS: VARIABLES: 0.0 Y
                       0.0 X
PUSH Y Z
    [98:42;3] PUSHS T_PUSH 0 0 0; [< Y Z >]
PUSH X
    [99:43;4] PUSHS T_PUSH 2 0 0; [< X * >]
PUSH Y
    [100:44;5] PUSHS T_PUSH 2 0 0; [< Y * >]
JMPGEQ DONE
    [101:45;3] JMPGEQ T_JMPS 0 0 0; DONE
POP
    [102:46;2] POPS T_POP 0 0 0; [< Z * >]
PUSH X Z
    [103:47;3] PUSHS T_PUSH 1 0 0; [< X Z >]
LABEL DONE
    [104:48;3] LABEL DONE
    [101:45;3] JMPGEQ T_JMPS 0 0 3; DONE
    STACKS: VARIABLES: 0.0 Z
                       0.0 Y
                       0.0 X
POP
    [106:48;2] POPS T_POP 0 0 0; [< Z * >]

// JMP TEST 6
// Z = 1 if 5 < X < 10 else 0
//
PUSHI NaN Z
    [111:49;3] PUSHI T_PUSH 0 0 0 nan; Z
    STACKS: VARIABLES: 0.0 Z
                       0.0 Y
                       0.0 X
PUSHI 5
    [113:50;4] PUSHI T_PUSH 0 0 0 5; *
PUSH X
    [114:51;5] PUSHS T_PUSH 3 0 0; [< X * >]
JMPGEQ * ITS-0
    [115:52;3] JMPGEQ T_JMPS 0 1 0; ITS-0
PUSHI 10
    [116:53;5] PUSHI T_PUSH 0 0 0 10; *
JMPGEQ ITS-0
    [117:54;3] JMPGEQ T_JMPS 0 0 0; ITS-0
PUSHI 1
    [118:55;4] PUSHI T_PUSH 0 0 0 1; *
POP // Z, but illegal as Z has same depth
    [119:56;3] POPS T_POP 0 0 0; [< * * >]
JMP DONE
    [120:57;3] JMP T_JMP 0 0 0; DONE
LABEL ITS-0
    [121:58;3] LABEL ITS-0
    [117:54;3] JMPGEQ T_JMPS 0 0 4; ITS-0
    [115:52;3] JMPGEQ T_JMPS 0 1 6; ITS-0
PUSHI 0
    [122:58;4] PUSHI T_PUSH 0 0 0 0; *
POP // Z, but illegal as Z has same depth
    [123:59;3] POPS T_POP 0 0 0; [< * * >]
LABEL DONE
    [124:60;3] LABEL DONE
    [120:57;3] JMP T_JMP 0 0 3; DONE
POP
    [125:60;2] POPS T_POP 0 0 0; [< Z * >]
    STACKS: VARIABLES: 0.0 Y
                       0.0 X

// JMP TEST 7
// Z = 1 if Z == FALSE else 0 if Z == TRUE else 10
//
PUSHI 1 Z
    [131:61;3] PUSHI T_PUSH 0 0 0 1; Z
    STACKS: VARIABLES: 0.0 Z
                       0.0 Y
                       0.0 X
PUSH Z
    [133:62;4] PUSHS T_PUSH 0 0 0; [< Z * >]
JMPFALSE ITS-0
    [134:63;3] JMPFALSE T_JMPS 0 0 0; ITS-0
PUSH Z
    [135:64;4] PUSHS T_PUSH 0 0 0; [< Z * >]
JMPTRUE ITS-1
    [136:65;3] JMPTRUE T_JMPS 0 0 0; ITS-1
PUSHI 10
    [137:66;4] PUSHI T_PUSH 0 0 0 10; *
POP // Z, but illegal as Z has same depth
    [138:67;3] POPS T_POP 0 0 0; [< * * >]
JMP DONE
    [139:68;3] JMP T_JMP 0 0 0; DONE
LABEL ITS-0
    [140:69;3] LABEL ITS-0
    [134:63;3] JMPFALSE T_JMPS 0 0 6; ITS-0
PUSHI 0
    [141:69;4] PUSHI T_PUSH 0 0 0 0; *
POP // Z, but illegal as Z has same depth
    [142:70;3] POPS T_POP 0 0 0; [< * * >]
JMP DONE
    [143:71;3] JMP T_JMP 0 0 0; DONE
LABEL ITS-1
    [144:72;3] LABEL ITS-1
    [136:65;3] JMPTRUE T_JMPS 0 0 7; ITS-1
PUSHI 1
    [145:72;4] PUSHI T_PUSH 0 0 0 1; *
POP // Z, but illegal as Z has same depth
    [146:73;3] POPS T_POP 0 0 0; [< * * >]
LABEL DONE
    [147:74;3] LABEL DONE
    [143:71;3] JMP T_JMP 0 0 3; DONE
    [139:68;3] JMP T_JMP 0 0 6; DONE
POP
    [148:74;2] POPS T_POP 0 0 0; [< Z * >]
    STACKS: VARIABLES: 0.0 Y
                       0.0 X

// Check for extra stuff at end of instruction
//
PUSHI 300 X 'this is extra for a PUSH'
    [153:75;3] PUSHI T_PUSH 0 0 0 300; X
ERROR: in mexas_compile_test_1.mex: lines ####-#### extra stuff at end of
       instruction: 'this is extra for a PUSH' ...:

// Check for extra stuff at end of instruction
//
PUSHI 300 X 'this is extra for a PUSH'
PUSH X Y Z
    [154:76;4] PUSHS T_PUSH 0 0 0; [< X Y >]
ERROR: in mexas_compile_test_1.mex: line ####: extra stuff at end of
       instruction: Z ...:
PUSH X Y Z
JMP FOO 'extra stuff' X Y
    [155:77;4] JMP T_JMP 0 0 0; FOO
ERROR: in mexas_compile_test_1.mex: line ####: extra stuff at end of
       instruction: 'extra stuff' ...:
JMP FOO 'extra stuff' X Y
ERROR: in mexas_compile_test_1.mex: line ####: jump target undefined:
       FOO; JMP... is unresolved:
JMP FOO 'extra stuff' X Y
exiting due to compile errors
