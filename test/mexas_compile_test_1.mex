// MEXAS Compile Test 1 Input
//
// File:	mexas_compile_test_1.mex
// Author:	Bob Walton (walton@acm.org)
// Date:	Fri Oct 18 07:41:36 AM EDT 2024
//
// The authors have placed this program in the public
// domain; they make no warranty and accept no liability
// for this program.

// PUSH, POP, ARITHMETIC OP TEST
//
PUSHI 2 X
PUSHI 2 Y
STACKS
ADD Z
STACKS
PUSH X
POP
ADD
PUSH Z W
SUB
STACKS
POP
STACKS

// JMP TEST 1
// Z = MIN ( X, Y )
//
PUSHI 5 X
PUSHI 23 Y
PUSHI NaN Z
STACKS
PUSH X
PUSH Y
STACKS
JMPLT ITS-X
PUSH Y
POP // Z, but illegal as Z has same depth
JMP DONE
LABEL ITS-X
PUSH X
POP // Z, but illegal as Z has same depth
LABEL DONE
STACKS
POP

// JMP TEST 2
// Z = MIN ( X, Y )
//
STACKS
PUSH X Z
PUSH X
PUSH Y
JMPLT ITS-X
POP
PUSH Y Z
LABEL ITS-X
POP

// JMP TEST 3
// Z = MIN ( X, Y )
// Z pushed into stack by code jumped over
//
STACKS
PUSH X
PUSH Y
JMPLT ITS-X
PUSH Y Z
JMP DONE
LABEL ITS-X
PUSH X Z
LABEL DONE
STACKS
POP
POP

// JMP TEST 4
// Z = MIN ( X, Y )
// Z popped from stack by code jumped over
//
STACKS
PUSH X
PUSH Y
PUSH Y Z
PUSH X Z
JMPLT ITS-X
POP
LABEL ITS-X
STACKS
POP

// JMP TEST 5
// Z = MIN ( X, Y )
// Done legally by jumping over a POP/PUSH pair.
//
STACKS
PUSH Y Z
PUSH X
PUSH Y
JMPGEQ DONE
POP
PUSH X Z
LABEL DONE
STACKS
POP

// JMP TEST 6
// Z = 1 if 5 < X < 10 else 0
//
PUSHI NaN Z
STACKS
PUSHI 5
PUSH X
JMPGEQ * ITS-0
PUSHI 10
JMPGEQ ITS-0
PUSHI 1
POP // Z, but illegal as Z has same depth
JMP DONE
LABEL ITS-0
PUSHI 0
POP // Z, but illegal as Z has same depth
LABEL DONE
POP
STACKS

// JMP TEST 7
// Z = 1 if Z == FALSE else 0 if Z == TRUE else 10
//
PUSHI 1 Z
STACKS
PUSH Z
JMPFALSE ITS-0
PUSH Z
JMPTRUE ITS-1
PUSHI 10
POP // Z, but illegal as Z has same depth
JMP DONE
LABEL ITS-0
PUSHI 0
POP // Z, but illegal as Z has same depth
JMP DONE
LABEL ITS-1
PUSHI 1
POP // Z, but illegal as Z has same depth
LABEL DONE
POP
STACKS

// Check for extra stuff at end of instruction
//
PUSHI 300 X 'this is extra for a PUSH'
PUSH X Y Z
JMP FOO 'extra stuff' X Y
